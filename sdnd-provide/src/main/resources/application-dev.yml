management:
  endpoints:
    web:
      exposure:
        include: info, health, beans, env, metrics
# spring
spring:
  aop:
    auto: true
  freemarker:
    check-template-location: false #检查模板路径是否存在
  application:
    name: sdnd-provide
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/sdnd?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: root@123
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      #自动提交
      auto-commit: true
      # 检测连接是否有效
      connection-test-query: SELECT 1
      #等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->
      connection-timeout: 30000
      # 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->
      idle-timeout: 300000
      #一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟
      max-lifetime: 1800000
      #连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) -->
      maximum-pool-size: 20
      #池中维护的最小空闲连接数，如果当连接池空闲连接少于 minimumIdle，
      #而且总共连接数不大于 maximumPoolSize 时，HikariCP 会尽力补充新的连接。为了性能考虑，不建议设置此值，而是让 HikariCP 把连接池当做固定大小的处理，默认 minimumIdle 与 maximumPoolSize 一样。
      minimum-idle: 5
      pool-name: DatebookHikariCP
      read-only: false
      #验证与数据库连接的有效时间
      validation-timeout: 5000
  # redis相关配置
  redis:
    host: 127.0.0.1
    port: 6379
    password:
    timeout: 5000
    jedis:
      pool:
        # 连接池中的最大空闲连接，默认值也是8。
        max-idle: 500
        # 连接池中的最小空闲连接，默认值也是0。
        min-idle: 50
        # 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)
        max-active: 1000
        # 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
        max-wait: 2000
  # rabbitmq相关配置
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: admin
    password: admin
    # 确保生产者到交换器exchange消息有没有发送成功,发送成功会回调生产者
    publisher-confirm-type: correlated
    # 消息在未被队列收到的情况下返回
    publisher-returns: true
    # 指定消息在没有被队列接收时是否强行退回还是直接丢弃
    template:
      mandatory: true
    listener:
      simple:
        retry:
          # 是否支持重试
          enabled: true
        #  手动ACK 不开启自动ACK模式,目的是防止报错后未正确处理消息丢失 默认 为 none
        # NONE：自动确认   AUTO：根据情况确认  MANUAL：手动确认
        acknowledge-mode: manual
        # 指定最小消费者数量
        concurrency: 1
        # 指定最大消费者数量
        max-concurrency: 10
        # 每次签收一条消息
        prefetch: 1
      direct:
        retry:
          enabled: true
        acknowledge-mode: manual
        prefetch: 1
# mybatis-plus
mybatis-plus:
  #多个package用逗号或者分号分隔
#  typeAliasesPackage: top.b0x0.admin.common.pojo
  mapper-locations: classpath:/mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true  # 是否开启自动驼峰命名规则（camel case）映射
    local-cache-scope: statement   #  STATEMENT 关闭一级缓存
    call-setters-on-nulls: true
    cache-enabled: false
  global-config:
    banner: false
    db-config:
      db-type: mysql
      logic-delete-value: 0
      logic-not-delete-value: 1
# Dubbo
service:
  version: 1.0
dubbo:
  application:
    name: dubbo-provide
    qos-enable: false
    qos-accept-foreign-ip: false
  registry:
    address: nacos://127.0.0.1:8848
  scan:
    basePackages: top.b0x0.admin.service
  provider:
    timeout: 30000  #方法调用的超时时间
    # 防止消费者绕过注册中心访问提供者, 随机token令牌，使用UUID生成
    token: true
  #    retries: 3      # 失败重试次数，缺省是 2
  #    loadbalance: roundrobin  # 负载均衡算法 , 缺省是随机 random。还可以配置轮询 roundrobin、最不活跃优先 4 leastactive 和一致性哈希 consistenthash 等
  filter: paramReceiveFilter
  protocol:
        # 随机端口
    port: 20031
#    port: 20041
### xxl-job admin address list, such as "http://address" or "http://address01,http://address02"
xxl:
  job:
    admin:
      ### 调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
      addresses: http://localhost:8080/xxl-job-admin
    ### 执行器通讯TOKEN [选填]：非空时启用；
    accessToken:
    # xxl-job executor server-info
    executor:
      ### 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册
      appname: ${spring.application.name}
      ### 执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。
      address:
      ### 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 "执行器注册" 和 "调度中心请求并触发任务"；
      ip: 127.0.0.1
      ### 执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；
      port: 9999
      ### 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；
      logpath: /data/applogs/sdnd/xxl-job/jobhandler
      ### 执行器日志文件保存天数 [选填] ： 过期日志自动清理, 限制值大于等于3时生效; 否则, 如-1, 关闭自动清理功能；
      logretentiondays: 30

juhe:
  # 历史上的今天
  todayInHistory:
    key: 2526ec383d550d7d2c6807286137f0a6
    url: http://v.juhe.cn/todayOnhistory/queryEvent.php
